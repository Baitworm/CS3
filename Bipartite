
import java.io.File;
import java.io.FileNotFoundException;
import java.util.*;

public class Bipartite {
     static int bipartite(ArrayList<Integer>[] adj) {
        //write your code here
        int[] colors = new int[adj.length];
        for (int i = 0; i < adj.length; i++) {
            if (colors[i] == 0) {
                if (!BFS(adj, i, colors)) {
                    return 0;
                }
            }
        }
        return 1;
    }
    static boolean BFS(ArrayList<Integer>[] adj,int vertice, int[] colors){
        Queue<Integer> queue = new LinkedList<>();
        queue.add(vertice);
        colors[vertice] = 1;
        while (!queue.isEmpty()) {
            int cur = queue.poll();
            for (int yup : adj[cur]) {
                if (colors[yup] == 0) {
                    colors[yup] = -colors[cur];
                    queue.add(yup);
                }
                else if (colors[yup] == colors[cur]) {
                    return false;
                }
            }
        }
        return true;
    }
    public static void main(String[] args) throws FileNotFoundException {
        Scanner scanner = new Scanner(new File("medBP.txt"));
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        ArrayList<Integer>[] adj = (ArrayList<Integer>[])new ArrayList[n];
        for (int i = 0; i < n; i++) {
            adj[i] = new ArrayList<Integer>();
        }
        for (int i = 0; i < m; i++) {
            int x, y;
            x = scanner.nextInt();
            y = scanner.nextInt();
            adj[x ].add(y );
            adj[y ].add(x );
        }
        System.out.println(bipartite(adj));
    }
}

